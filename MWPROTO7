package com.example.mwproto1.ROOM

import androidx.lifecycle.LiveData
import androidx.room.*


@Dao
interface PomiarDao {

    @Insert
    suspend fun addPomiar(pomiar: Pomiar)

    @Query("SELECT * FROM pomiar ORDER BY id DESC")
    suspend fun getAllPomiar():List<Pomiar>

    @Insert
    suspend fun addMultiplePomiar(vararg pomiar: Pomiar)

    @Update
    suspend fun  updatePomiar(pomiar: Pomiar)

    @Delete
    suspend fun deletePomiar(pomiar: Pomiar )

    @Query("SELECT avg(Stezenie) FROM Pomiar ")
     fun average(): Float
}


REPOSITORY

package com.example.mwproto1.ROOM

import android.app.Application
import androidx.lifecycle.LiveData
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Deferred
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.async

class Repository(application: Application) {


    private  var pomiardao: PomiarDao

    init {
        val database = Database
            .buildDatabase(application.applicationContext)
        pomiardao = database.getPomiarDao()

    }


    fun averageasync(): Deferred<Float> =
        CoroutineScope(Dispatchers.IO).async {
            pomiardao.average()
        }

}




View Model 


package com.example.mwproto1.ViewModel

import android.app.Application
import androidx.lifecycle.AndroidViewModel
import androidx.lifecycle.LiveData
import com.example.mwproto1.ROOM.Pomiar
import com.example.mwproto1.ROOM.Repository
import kotlinx.coroutines.Deferred
import kotlinx.coroutines.runBlocking

class ViewModel(application: Application):AndroidViewModel(application) {

    private var PomiarRepository: Repository = Repository(application)

    private var allpomiar: Deferred<Float> =
        PomiarRepository.averageasync()


    fun AverageVM(): Float = runBlocking {
        allpomiar.await()
    }
}


Analiza --> w tym activity chce wywowłać w TextView(TV7) wynik czyli średnią z calej kolumny 

package com.example.mwproto1

import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.TextView
import androidx.lifecycle.LiveData
import androidx.lifecycle.Observer
import androidx.lifecycle.ViewModel
import androidx.lifecycle.ViewModelProvider
import androidx.lifecycle.viewModelScope
import com.example.mwproto1.ROOM.Pomiar
import com.example.mwproto1.UI.PomiarAdapter
import kotlinx.android.synthetic.main.activity_analiza.*

class Analiza : AppCompatActivity() {

    private lateinit var textView: TextView
    private lateinit var viewModel: ViewModel
    private lateinit var daoAdapter:PomiarAdapter
    private lateinit var pomiar:LiveData<List<Pomiar>>

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_analiza)

        viewModel = ViewModelProvider.AndroidViewModelFactory.getInstance(application)
            .create(ViewModel::class.java)

        textView = findViewById(R.id.TV7)

        pomiar = viewModel.AverageVM()   ----> tutaj jest błąd funckja AverageVM nie łączy sie z VM "Unresolved reference"
        pomiar.observe(this, Observer {
            if(it.isEmpty()){
                daoAdapter = PomiarAdapter(it)
                textView.adapter = daoAdapter   ----> tutaj adapter nie działa ale przeciez nie mozna go połaczyć z textview ?? 
            }
        })


}

}







}
